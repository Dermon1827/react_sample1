{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harud\\\\sample\\\\src\\\\components\\\\Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Board } from \"./Board\";\nimport { useGameControl } from \"../hooks/useGameControl\";\nimport { calculateWinner } from \"../utils/calculateWinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Game = () => {\n  _s();\n\n  const {\n    history,\n    stepNumber,\n    xIsNext,\n    handleClickSquare,\n    jumpToPast\n  } = useGameControl();\n\n  const handleClick = i => handleClickSquare(i);\n\n  const jumpTo = step => jumpToPast(step);\n\n  const current = history[stepNumber];\n  const winner = calculateWinner(current.squares);\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  });\n  let status;\n\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"UIRh/8CFufOCNJ1B6rKvBX+EHOw=\", false, function () {\n  return [useGameControl];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/harud/sample/src/components/Game.tsx"],"names":["React","Board","useGameControl","calculateWinner","Game","history","stepNumber","xIsNext","handleClickSquare","jumpToPast","handleClick","i","jumpTo","step","current","winner","squares","moves","map","move","desc","status"],"mappings":";;;AAAA,OAAOA,KAAP,MAAyB,OAAzB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AACA,SAAQC,eAAR,QAA8B,0BAA9B;;AAEA,OAAO,MAAMC,IAAS,GAAG,MAAO;AAAA;;AAE9B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,iBAA/B;AAAkDC,IAAAA;AAAlD,MAAgEP,cAAc,EAApF;;AAEA,QAAMQ,WAAW,GAAIC,CAAD,IAAeH,iBAAiB,CAACG,CAAD,CAApD;;AAEA,QAAMC,MAAM,GAAIC,IAAD,IAAkBJ,UAAU,CAACI,IAAD,CAA3C;;AAEA,QAAMC,OAAO,GAAGT,OAAO,CAACC,UAAD,CAAvB;AACA,QAAMS,MAAM,GAAGZ,eAAe,CAACW,OAAO,CAACE,OAAT,CAA9B;AAEA,QAAMC,KAAK,GAAGZ,OAAO,CAACa,GAAR,CAAY,CAACL,IAAD,EAAOM,IAAP,KAAgB;AACxC,UAAMC,IAAI,GAAGD,IAAI,GACf,iBAAiBA,IADF,GAEf,kBAFF;AAGA,wBACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMP,MAAM,CAACO,IAAD,CAA7B;AAAA,kBAAsCC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,OAASD,IAAT;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GATa,CAAd;AAWA,MAAIE,MAAJ;;AACA,MAAIN,MAAJ,EAAY;AACVM,IAAAA,MAAM,GAAG,aAAaN,MAAtB;AACD,GAFD,MAEO;AACLM,IAAAA,MAAM,GAAG,mBAAmBd,OAAO,GAAG,GAAH,GAAS,GAAnC,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,OAAO,EAAEO,OAAO,CAACE,OADnB;AAEE,QAAA,OAAO,EAAEL,CAAC,IAAID,WAAW,CAACC,CAAD;AAF3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAMU;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CM;;GAAMb,I;UAE2DF,c;;;KAF3DE,I","sourcesContent":["import React, {VFC} from 'react';\r\nimport {Board} from \"./Board\";\r\nimport {useGameControl} from \"../hooks/useGameControl\";\r\nimport {calculateWinner} from \"../utils/calculateWinner\";\r\n\r\nexport const Game: VFC = () =>  {\r\n\r\n  const {history, stepNumber, xIsNext, handleClickSquare, jumpToPast} = useGameControl();\r\n\r\n  const handleClick = (i: number) => handleClickSquare(i);\r\n\r\n  const jumpTo = (step: number) => jumpToPast(step);\r\n\r\n  const current = history[stepNumber];\r\n  const winner = calculateWinner(current.squares);\r\n\r\n  const moves = history.map((step, move) => {\r\n    const desc = move ?\r\n      'Go to move #' + move :\r\n      'Go to game start';\r\n    return (\r\n      <li key={move}>\r\n        <button onClick={() => jumpTo(move)}>{desc}</button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  let status;\r\n  if (winner) {\r\n    status = \"Winner: \" + winner;\r\n  } else {\r\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          squares={current.squares}\r\n          onClick={i => handleClick(i)}\r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}